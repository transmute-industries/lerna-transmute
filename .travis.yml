matrix:
  include:
    - os: linux
      dist: trusty
      sudo: required
      env:
        - KUBE_VERSION=v1.9.4
        - DO_JWT_DL=n
        - VERBOSITY=100
        - CHANGE_MINIKUBE_NONE_USER=true
        - MINIKUBE_VERSION=v0.25.2
        - USE_VOX=n
        - USE_WARN=n
        - EDITOR=cat
        - MINIKUBE_MEMORY=7777
        - MINIKUBE_CPU=4
        - MINIKUBE_DISK=50g
        - MINIKUBE_DRIVER=none
        - HELM_INSTALL_DIR=$HOME/.local/bin
        - HELM_VERSION=v2.8.2
        - NVM_DIR="$HOME/.nvm"
        - HELM_SHA256=0521956fa22be33189cc825bb27b3f4178c5ce9a448368b5c81508d446472715
      language: bash
    - os: linux
      dist: trusty
      sudo: required
      env:
        - KUBE_VERSION=v1.9.0
        - DO_JWT_DL=n
        - VERBOSITY=100
        - CHANGE_MINIKUBE_NONE_USER=true
        - MINIKUBE_VERSION=v0.25.2
        - USE_VOX=n
        - USE_WARN=n
        - EDITOR=cat
        - MINIKUBE_MEMORY=7777
        - MINIKUBE_CPU=4
        - MINIKUBE_DISK=50g
        - MINIKUBE_DRIVER=none
        - HELM_INSTALL_DIR=$HOME/.local/bin
        - HELM_VERSION=v2.8.2
        - NVM_DIR="$HOME/.nvm"
        - HELM_SHA256=0521956fa22be33189cc825bb27b3f4178c5ce9a448368b5c81508d446472715
      language: bash
    - os: linux
      dist: trusty
      sudo: required
      env:
        - KUBE_VERSION=v1.8.0
        - DO_JWT_DL=n
        - VERBOSITY=100
        - CHANGE_MINIKUBE_NONE_USER=true
        - MINIKUBE_VERSION=v0.25.2
        - USE_VOX=n
        - USE_WARN=n
        - EDITOR=cat
        - MINIKUBE_MEMORY=7777
        - MINIKUBE_CPU=4
        - MINIKUBE_DISK=50g
        - MINIKUBE_DRIVER=none
        - HELM_INSTALL_DIR=$HOME/.local/bin
        - HELM_VERSION=v2.8.2
        - NVM_DIR="$HOME/.nvm"
        - HELM_SHA256=0521956fa22be33189cc825bb27b3f4178c5ce9a448368b5c81508d446472715
      language: bash

before_script:
- if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then bash .ci/linux_before_install.sh; fi
- bash -l -c "echo PATH=$HOME/.transmute/bin:$PATH >> $HOME/.bashrc"
- bash -l -c "echo PATH=$HOME/.local/bin:$PATH >> $HOME/.bashrc"
  # This appears to be necessary for the time being otherwise minikube fails to start if it is only present in the ~/.transmute/bin directory
- if [[ ! -e "/usr/local/bin/minikube" ]]; then curl -Lo minikube https://storage.googleapis.com/minikube/releases/$MINIKUBE_VERSION/minikube-linux-amd64 && chmod +x minikube && sudo mv minikube /usr/local/bin/; fi
- mkdir -p $HOME/.local/bin
- cd $HOME; rm -Rf .transmute; mkdir -p .transmute/git; cd .transmute/git; ln -s $TRAVIS_BUILD_DIR transmute
- cd $TRAVIS_BUILD_DIR
- TRANSMUTE_RELEASE=$TRAVIS_BRANCH bash -l ./bootstrap
- export PATH=$HOME/.transmute/bin:$PATH
- cd $TRAVIS_BUILD_DIR/packages/transmute-cli
- bash -l -c "npm i"
- bash -l -c "npm run build"
- bash -l -c "npm i -g"
- cd $TRAVIS_BUILD_DIR

script:
- bash -l -c "npm i"
- if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then bash -l -c "transmute k8s provision-minikube travistest --vmdriver none"; fi
- sleep 8
- minikube update-context
- if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then bash -l -c "yes y|transmute k8s init travistest"; fi
- bash -l -c "lerna bootstrap"
- sleep 8
- bash -l -c "kubectl get pods --all-namespaces"
- bash -l -c "kubectl get svc --all-namespaces"
- bash -l -c "kubectl describe pod $(kubectl get pod --all-namespaces|grep gateway-kong-migrations|awk '{print $2}')"
- bash -l -c "kubectl describe pod $(kubectl get pod --all-namespaces|grep -v gateway-kong-migrations|grep gateway-kong|awk '{print $2}')"
- bash -l -c "lerna run --scope transmute-framework truffle:test"
- bash -l -c "lerna run --scope transmute-framework truffle:migrate"
- bash -l -c "lerna run --scope transmute-framework test"
- bash -l -c "lerna run --scope transmute-framework test:report"
