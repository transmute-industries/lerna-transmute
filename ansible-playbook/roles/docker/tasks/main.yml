---
- name: Install python-pip
  package: "name=python-pip state=present"
  become: yes
  when: ansible_system == 'Linux' and (ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu')

- name: Install pip
  package: "name=pip state=present"
  become: yes
  when: ansible_system == 'Linux' and not (ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu')

- name: Get upstream APT GPG key
  apt_key:
    id: "9DC858229FC7DD38854AE2D88D81803C0EBFCD88"
    keyserver: "{{ ansible_local.core.keyserver
                   if (ansible_local|d() and ansible_local.core|d() and
                       ansible_local.core.keyserver)
                   else 'hkp://pool.sks-keyservers.net' }}"
    state: "present"
  become: yes
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'

- name: Configure upstream APT repository
  apt_repository:
    repo: "deb [arch=amd64] https://download.docker.com/linux/{{ ansible_distribution | lower }} {{ ansible_distribution_release }} stable"
    state: "present"
    update_cache: True
  become: yes
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'

- name: Install docker
  package: "name=docker-ce state=present"
  become: yes
  when: ansible_system == "Linux"

- name: Install docker (Darwin)
  homebrew_cask:
    name: "docker"
    state: present
  when: ansible_system == "Darwin"

- name: Start docker (Darwin)
  shell: open --background -a Docker
  when: ansible_system == "Darwin"

- name: Start docker
  service: name=docker state=started enabled=yes
  become: yes
  when: ansible_system == "Linux"

- name: Install docker (pip)
  pip:
    name: docker
    state: present
  become: yes
