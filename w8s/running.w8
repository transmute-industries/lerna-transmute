#!/bin/sh
: ${VERBOSITY:=0}

squawk () {
  # This function simplifies error reporting and verbosity
  # call it by preceding your message with a verbosity level
  # e.g. `squawk 3 "This is a squawk"`
  # if the current verbosity level is greater than or equal to
  # the number given then this function will echo out your message
  # and pad it with # to let you now how verbose that message was
  squawk_lvl=$1
  shift
  squawk=$1
  shift
  squawk_opt=$@

  if [[ "$VERBOSITY" -ge "$squawk_lvl" ]] ; then
  count_squawk=0
    while [[ "$count_squawk" -lt "$squawk_lvl" ]]; do
      printf "#"
      count_squawk=`expr $count_squawk + 1`
    done
    echo " $squawk"
  fi
}

if [ $# -ne 2 ]; then
  # Print usage
  echo 'Error! wrong number of arguments'
  echo 'usage:'
  echo 'w8/running.w8 what-to-wait-for in-what-namespace'
  exit 1
fi

printf "wait on $1 to become available"

# while loop
countone=1
# timeout for 15 minutes
while [ $countone -lt 151 ]
do
  printf '.'
  RESULT=$(kubectl get --namespace=$2 -o template pod --template={{.status.phase}} $1 2>/dev/null | grep Running)
  if [ "$RESULT" ]; then
      echo '.'
      echo "$RESULT"
      break
  fi
  if [ "$VERBOSITY" -ge 14 ] ; then
    echo "## $2"
    kubectl get pods --namespace $2
  fi
  countone=`expr $countone + 1`
  sleep 3
done

echo "$1 is now up and running"
